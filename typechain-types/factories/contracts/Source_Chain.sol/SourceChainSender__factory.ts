/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SourceChainSender,
  SourceChainSenderInterface,
} from "../../../contracts/Source_Chain.sol/SourceChainSender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wmatic",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdt",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "swapAndStake",
    outputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "";

type SourceChainSenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SourceChainSenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SourceChainSender__factory extends ContractFactory {
  constructor(...args: SourceChainSenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: PromiseOrValue<string>,
    _link: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    _wmatic: PromiseOrValue<string>,
    _usdt: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SourceChainSender> {
    return super.deploy(
      _router,
      _link,
      _swapRouter,
      _wmatic,
      _usdt,
      overrides || {}
    ) as Promise<SourceChainSender>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    _link: PromiseOrValue<string>,
    _swapRouter: PromiseOrValue<string>,
    _wmatic: PromiseOrValue<string>,
    _usdt: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _router,
      _link,
      _swapRouter,
      _wmatic,
      _usdt,
      overrides || {}
    );
  }
  override attach(address: string): SourceChainSender {
    return super.attach(address) as SourceChainSender;
  }
  override connect(signer: Signer): SourceChainSender__factory {
    return super.connect(signer) as SourceChainSender__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SourceChainSenderInterface {
    return new utils.Interface(_abi) as SourceChainSenderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SourceChainSender {
    return new Contract(address, _abi, signerOrProvider) as SourceChainSender;
  }
}
